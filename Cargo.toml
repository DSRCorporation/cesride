[package]
name = "cesride"
version = "0.1.3"
edition = "2021"
description = "Cryptographic primitives for use with Composable Event Streaming Representation (CESR)"
license = "Apache-2.0"
keywords = ["cesr", "keri", "acdc"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["rlib", "cdylib"]

[features]
ffi = ["dep:uniffi", "dep:uniffi_bindgen", "dep:uniffi_macros"]

[dependencies]
base64 = "~0.21"
blake2 = "~0.10"
blake3 = "~1"
chrono = { version = "~0.4", default-features = false, features = ["clock"] }
ed25519-dalek = "~1"
indexmap = "~1"
k256 = "~0.12"
lazy_static = "~1"
rand = "0.7.0" # this needs pinning for one of the seeding pieces of a signing suite
rand_core = "~0.6"
regex = "~1"
serde_json = { version = "~1", features = ["preserve_order"] }
sha2 = "~0.10"
sha3 = "~0.10"
thiserror = "~1"

# dependencies need for build uniffi bindings
uniffi = { version = "0.23", optional = true, features = [ "build", "cli" ] }
uniffi_bindgen = { version = "0.23.0", optional = true }
uniffi_macros = { version = "0.23.0", optional = true }

[dev-dependencies]
hex-literal = "*"
hex = "*"
rstest = "*"

[build-dependencies]
uniffi = { version = "0.23", optional = true, features = [ "build", "cli" ] }

[[bin]]
# This can be whatever name makes sense for your project, but the rest of this tutorial assumes uniffi-bindgen.
name = "uniffi-bindgen"
path = "src/ffi/uniffi-bindgen.rs"
required-features = ["ffi"]